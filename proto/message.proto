syntax = "proto2";

package dafs.proto;

message Identity
{
    required string id = 1;
}

message BlockFormat
{
    required bytes contents = 1;
}

message BlockInfo
{
    required string path = 1;
    required Identity identity = 2;
    required int32 revision = 3;
}

message Endpoint
{
    required Address management = 1;
    required Address replication = 2;
    required Identity identity = 3;
    required string fault_domain = 4;
}

message ReplicatedEndpoints
{
    required Endpoint minus = 1;
    required Endpoint zero = 2;
    required Endpoint plus = 3;
}

message MetaData
{
    enum MetaDataType
    {
        BLOCK_INFO = 0;
        BLOCK_FORMAT = 1;
        ADDRESS = 2;
        ENDPOINT = 3;
        IDENTIFIER = 4;
        NODE_ENDPOINTS = 5;
        MINUS_REPLICATED_ENDPOINTS = 6;
        ZERO_REPLICATED_ENDPOINTS = 7;
        PLUS_REPLICATED_ENDPOINTS = 8;
        MINUS_IDENTITY = 9;
        ZERO_IDENTITY = 10;
        PLUS_IDENTITY = 11;
    }
    required MetaDataType type = 1;
    required bytes value = 2;
}

message Address
{
    required string ip = 1;
    required int32 port = 2;
}

message Message
{
    enum MessageType
    {
        SUCCESS = 0;
        FAILURE = 1;
        ALLOCATE_BLOCK = 2;
        READ_BLOCK = 3;
        WRITE_BLOCK = 4;
        DELETE_BLOCK = 5;
        GET_NODE_DETAILS = 6;
        JOIN_CLUSTER = 7;
        REQUEST_JOIN_CLUSTER = 8;
        ACCEPT_JOIN_CLUSTER = 9;
        EXIT_CLUSTER = 10;
        PROPOSE_EXIT_CLUSTER = 11;
        PLUS_EXIT_CLUSTER = 12;
        MINUS_EXIT_CLUSTER = 13;
    }
    required MessageType type = 3;
    repeated MetaData metadata = 4;
}


message Delta
{
    required bytes difference = 1;
}


message Proposal
{
    enum ProposalType
    {
        WRITE_BLOCK = 0;
        DELETE_BLOCK = 1;
        PING = 2;
    }
    required ProposalType type = 1;
    required bytes content = 2;
    required string uuid = 3;
}


message ProposalContent
{
    required BlockInfo info = 1;
    required bytes change = 2;
    required int32 hash = 3;
    required int32 revision = 4;
}


message BlockIndex
{
    repeated BlockInfo items = 1;
}
